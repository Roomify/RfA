<?php

/**
 * @file
 * Code for the Roomify Landing Page feature.
 */

include_once 'roomify_landing_page.features.inc';

/**
 * Implements hook_classy_paragraphs_list_options().
 */
function roomify_landing_page_classy_paragraphs_list_options($options, $field, $instance) {
  $options['agency_1_column_row'] = t('1 Column Class');
  $options['agency_2_columns_row'] = t('2 Columns Class');
  $options['agency_3_columns_row'] = t('3 Columns Class');
  $options['agency_4_columns_row'] = t('4 Columns Class');
  $options['agency_5_columns_row'] = t('5 Columns Class');

  return $options;
}

/**
 * Implements hook_entity_info_alter().
 */
function roomify_landing_page_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['landing_page_teaser'] = array(
    'label' => t('Landing Page Teaser'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * FORM_ID = landing_page_node_form
 * Hide Class select list on customizable landing page paragraphs.
 */
function roomify_landing_page_form_landing_page_node_form_alter(&$form, &$form_state) {
  $form['#attached']['css'][] = drupal_get_path('module', 'roomify_landing_page') . '/css/roomify_landing_page.css';
  global $user;

  if (isset($form['field_landing_page_css_class'])) {
    if ($user->uid != 1) {
      $form['field_landing_page_css_class']['#access'] = FALSE;
    }
  }
  if (isset($form['field_landing_page_rows'])) {
    $form['field_landing_page_rows']['#language'] ? ($lang = $form['field_landing_page_rows']['#language']) : ($lang = LANGUAGE_NONE);

    $items = $form['field_landing_page_rows'][$lang]['#max_delta'];

    for ($i = 0; $i <= $items; $i++) {
      if (isset($form['field_landing_page_rows'][LANGUAGE_NONE][$i]['field_row_css_class']) && $user->uid != 1) {
        $form['field_landing_page_rows'][LANGUAGE_NONE][$i]['field_row_css_class']['#access'] = FALSE;
      }
      if ($form['field_landing_page_rows'][$lang][$i]['#entity_type'] == 'paragraphs_item') {
        $admin_title = field_get_items('paragraphs_item', $form['field_landing_page_rows'][$lang][$i]['#entity'], 'field_row_admin_title');
        if (isset($admin_title[0]['value'])) {
          $form['field_landing_page_rows'][$lang][$i]['paragraph_bundle_title']['info']['#markup'] .= '</br><div> Row title: <em class="placeholder" style="margin-left:2px;">   ' . $admin_title[0]['value'] . '</em></div>';
        }
      }

      if (isset($form['field_landing_page_rows'][$lang][$i]['field_cta_class'])) {
        $form['field_landing_page_rows'][$lang][$i]['field_cta_class']['#access'] = FALSE;
      }
    }
  }
}

/**
 * Implements hook_preprocess_entity().
 */
function roomify_landing_page_preprocess_entity(&$variables) {
  if ($variables['entity_type'] == 'paragraphs_item') {
    // Check if is a "Edge to Edge" element.
    if (isset($variables['elements']['#entity']->field_cta_edge_to_edge)) {
      if ($variables['elements']['#entity']->field_cta_edge_to_edge[LANGUAGE_NONE][0]['value'] == 0) {
        // Not Edge to Edge.
        $variables['classes_array'][] = 'not-edge-to-edge';
      }
    }

    // Add the Row's CSS Class if set.
    if (isset($variables['elements']['#entity']->field_row_css_class)) {
      if (isset($variables['elements']['#entity']->field_row_css_class[LANGUAGE_NONE][0]['value'])) {
        // Add the CSS Class.
        $variables['classes_array'][] = $variables['elements']['#entity']->field_row_css_class[LANGUAGE_NONE][0]['value'];
      }
    }

    // WE ARE GOING TO DIPLAY A "BLOCK" PARAGRAPH.
    if ($variables['paragraphs_item']->bundle == 'block') {
      $bid = $variables['paragraphs_item']->field_cta_block[LANGUAGE_NONE][0]['value'];
      $element = load_block_from_bid($bid);
      $block_title = '';
      if (isset($variables['paragraphs_item']->field_cta_title[LANGUAGE_NONE][0]['value'])) {
        $block_title = $variables['paragraphs_item']->field_cta_title[LANGUAGE_NONE][0]['value'];
      }
      $block = block_load($element['module'], $element['delta']);
      $render_array = _block_get_renderable_array(_block_render_blocks(array($block)));
      // Override the block title.
      $render_array["{$element['module']}_{$element['delta']}"]['#block']->subject = t($block_title);
      $variables['block'] = drupal_render($render_array);
    }

    // WE ARE GOING TO DIPLAY A "SLIDESHOW" PARAGRAPH.
    if ($variables['paragraphs_item']->bundle == 'slideshow') {
      $size = field_get_items('paragraphs_item', $variables['paragraphs_item'], 'field_cta_gallery_size');
      // Load the view.
      if ($size[0]['value'] == '0') {
        $variables['slideshow'] = views_embed_view('roomify_slideshow_paragraph', 'panel_pane_1', $variables['paragraphs_item']->item_id);
      }
      if ($size[0]['value'] == '1') {
        $variables['slideshow'] = views_embed_view('roomify_slideshow_paragraph', 'panel_pane_2', $variables['paragraphs_item']->item_id);
      }
    }

    // WE ARE GOING TO DIPLAY A "LOCATION MAP" PARAGRAPH.
    if ($variables['paragraphs_item']->bundle == 'location_map') {
      // Load the view.
      $variables['location_map'] = views_embed_view('roomify_location_map_paragraph', 'single_location_map', $variables['field_cta_location'][0]['target_id']);
    }

    // WE ARE GOING TO DIPLAY AN "AREA" PARAGRAPH.
    if ($variables['paragraphs_item']->bundle == 'area') {
      $name = '';
      $info = '';
      $image = '';
      $path = '';
      global $base_url;
      if (!empty($variables['paragraphs_item']->field_cta_area)) {
        $term = field_get_items('paragraphs_item', $variables['paragraphs_item'], 'field_cta_area');

        $area = taxonomy_term_load($term[0]['tid']);
        if ($area) {
          $featured_image = field_get_items('taxonomy_term', $area, 'field_area_featured_image');

          $image = array('style_name' => 'homepage_features', 'path' => $featured_image[0]['uri']);
          $name = $area->name;
          $path = url(drupal_get_path_alias('taxonomy/term/' . $area->tid));

          $short_description = field_get_items('taxonomy_term', $area, 'field_area_short_description');
          if (!empty($short_description[0]['value'])) {
            $info = $short_description[0]['value'];
          }
        }
      }

      $variables['name'] = $name;
      $variables['image'] = $image;
      $variables['path'] = $path;
      $variables['info'] = $info;

    }
    // WE ARE GOING TO DIPLAY A "PROPERTY" PARAGRAPH.
    if ($variables['paragraphs_item']->bundle == 'property') {
      // Load the view.
      $property_id = field_get_items('paragraphs_item', $variables['paragraphs_item'], 'field_cta_property');

      $property = entity_load_single('roomify_property', $property_id[0]['target_id']);

      if ($property != FALSE) {
        $featured_image = field_get_items('roomify_property', $property, 'field_sp_featured_image');

        $short_description = field_get_items('roomify_property', $property, 'field_sp_short_description');
        $type_references = field_get_items('roomify_property', $property, 'property_bat_type_reference');

        $types = '<table>
                <thead>
                  <tr class="type-icons">
                    <th class="name icon">n</th>
                    <th class="capacity icon">n</th>
                    <th class="bedrooms icon">n</th>
                    <th class="price icon">n</th>
                  </tr>
                </thead>
                <tbody>';

        foreach ($type_references as $type_reference) {
          $type = bat_type_load($type_reference['target_id']);
          $name = $type->name;
          $capacity = field_get_items('bat_type', $type, 'field_st_max_capacity');
          $single_beds = field_get_items('bat_type', $type, 'field_st_single_bed');
          $double_beds = field_get_items('bat_type', $type, 'field_st_double_bed');
          $beds = $single_beds[0]['value'] + (2 * $double_beds[0]['value']);
          $price = field_get_items('bat_type', $type, 'field_st_default_price');
          $double_beds = field_get_items('bat_type', $type, 'field_st_double_bed');

          // Build the types.
          $types .= '<tr class="type-row">
                    <td class="name row-element">' . $name . '</td>
                    <td class="capacity row-element">' . $capacity[0]['value'] . '</td>
                    <td class="bedrooms row-element">' . $beds . '</td>
                    <td class="price row-element">' . commerce_currency_format($price[0]['amount'], $price[0]['currency_code']) . '</td>
                  </tr>';
        }

        $types .= '</tbody></table>';

        $variables['property_id'] = $property_id[0]['target_id'];
        $variables['property_name'] = $property->name;
        $variables['property_type'] = $property->type;
        $variables['featured_image'] = $featured_image[0];
        $variables['description'] = $short_description[0]['value'];
        $variables['types'] = $types;
      }
    }
    // WE ARE GOING TO DIPLAY A "LATEST BLOG POSTS" PARAGRAPH.
    if ($variables['paragraphs_item']->bundle == 'latest_blog_posts') {
      $variables['blog_posts'] = views_embed_view('blog', 'landing_page_blogposts');

      $link_to_blog_page = field_get_items('paragraphs_item', $variables['paragraphs_item'], 'field_cta_add_link_to_blog');

      if ($link_to_blog_page[0]['value']) {
        $variables['link_to_blog_page'] = TRUE;
      }
      else {
        $variables['link_to_blog_page'] = FALSE;
      }
    }
  }
}

/**
 * Return a list of available blocks.
 */
function _roomify_landing_page_get_defined_blocks() {
  $blocks = _block_rehash();
  $values = array();
  foreach ($blocks as $block) {
    $values[$block['bid']] = $block['info'];
  }

  return $values;
}

/**
 * Load a block from its block id.
 */
function load_block_from_bid($bid) {
  return db_query("SELECT * FROM {block} WHERE bid = :bid", array(':bid' => $bid))->fetchAssoc();
}

/**
 * Implements hook_theme().
 */
function roomify_landing_page_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['paragraphs_item__block'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'paragraphs-item--block',
    'path' => drupal_get_path('module', 'roomify_landing_page') . '/theme/paragraphs',
  );
  $theme['paragraphs_item__slideshow'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'paragraphs-item--slideshow',
    'path' => drupal_get_path('module', 'roomify_landing_page') . '/theme/paragraphs',
  );
  $theme['paragraphs_item__location_map'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'paragraphs-item--location-map',
    'path' => drupal_get_path('module', 'roomify_landing_page') . '/theme/paragraphs',
  );
  $theme['paragraphs_item__property'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'paragraphs-item--property',
    'path' => drupal_get_path('module', 'roomify_landing_page') . '/theme/paragraphs',
  );
  $theme['paragraphs_item__area'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'paragraphs-item--area',
    'path' => drupal_get_path('module', 'roomify_landing_page') . '/theme/paragraphs',
  );
  $theme['paragraphs_item__latest_blog_posts'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'paragraphs-item--area',
    'path' => drupal_get_path('module', 'roomify_landing_page') . '/theme/paragraphs',
  );

  return $theme;
}

/**
 * Implements hook_theme_registry_alter().
 */
function roomify_landing_page_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'roomify_landing_page');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/**
 * Implements hook_preprocess_html().
 */
function roomify_landing_page_preprocess_html(&$vars) {
  // Add class to body if landing_page_css_class is set.
  if ($node = menu_get_object()) {
    if (!empty($node)) {
      if ($node->type == 'landing_page' && isset($node->field_landing_page_css_class[LANGUAGE_NONE][0]['value'])) {
        $vars['classes_array'][] = $node->field_landing_page_css_class[LANGUAGE_NONE][0]['value'];
      }
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function roomify_landing_page_preprocess_page(&$variables) {
  if (isset($variables['node']->type)) {
    if ($variables['node']->type == 'landing_page') {
      drupal_add_js(drupal_get_path('module', 'roomify_landing_page') . '/js/roomify_landing_page.js');
      drupal_add_css(drupal_get_path('module', 'roomify_landing_page') . '/css/roomify_landing_page.css');

      $nodetype = $variables['node']->type;

      // Add a custom template for the landing_page node type.
      $variables['theme_hook_suggestions'][] = 'page__' . $nodetype;
      $variables['roomify_landing_page_view'] = '';

      if (isset($variables['node']->field_landing_page_edge_to_edge[LANGUAGE_NONE][0]['value'])) {
        if ($variables['node']->field_landing_page_edge_to_edge[LANGUAGE_NONE][0]['value']) {
          // THE NODE IS EDGE TO EDGE.
          $variables['roomify_landing_page_view'] = 'roomify-landing-page-edgy-node';
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function roomify_landing_page_preprocess_node(&$variables) {
  if ($variables['view_mode'] == 'landing_page_teaser') {
    $variables['theme_hook_suggestions'][] = 'node__' . $variables['type'] . '__landing_page_teaser';
  }
}

/**
 * Implements hook_roomify_rights().
 */
function roomify_landing_page_roomify_rights() {
  $rights['roomify_landing_page'] = array(
    'anonymous user' => array(
      'view paragraph content 1_column_row',
      'view paragraph content 2_columns_row',
      'view paragraph content 3_columns_row',
      'view paragraph content 4_columns_row',
      'view paragraph content activity',
      'view paragraph content block',
      'view paragraph content area',
      'view paragraph content latest_blog_posts',
      'view paragraph content blogpost',
      'view paragraph content image',
      'view paragraph content image_and_text',
      'view paragraph content linked_image',
      'view paragraph content linked_image_and_text',
      'view paragraph content location_map',
      'view paragraph content property',
      'view paragraph content slideshow',
      'view paragraph content text',
      'view paragraph content video',
    ),
    'authenticated user' => array(
      'view paragraph content 1_column_row',
      'view paragraph content 2_columns_row',
      'view paragraph content 3_columns_row',
      'view paragraph content 4_columns_row',
      'view paragraph content activity',
      'view paragraph content block',
      'view paragraph content area',
      'view paragraph content latest_blog_posts',
      'view paragraph content blogpost',
      'view paragraph content image',
      'view paragraph content image_and_text',
      'view paragraph content linked_image',
      'view paragraph content linked_image_and_text',
      'view paragraph content location_map',
      'view paragraph content property',
      'view paragraph content slideshow',
      'view paragraph content text',
      'view paragraph content video',
    ),
  );

  return $rights;
}
